'''
name = 'Sasha'
age = 18
surname = 'Surname'

print('Hello', name, '\nYou are years old', age,  '\nYou surname is ', surname, name)

print('Hello {0} \nYou are years old {1}\nYou surname is {2} \n{1} {2}'.format(name, age, surname))

print('Hello {name} \nYou are years old {age}\nYou surname is {surname} \n{name}  {surname}, {plus}'.format(name = name, \
                                                                                                   age = age,  \
                                                                                                   surname = surname, \
                                                                                                   plus = name + ' ' + surname))

# name.capitalize() - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ø–µ—Ä—à–∏–π —Å–∏–º–≤–æ–ª –≤ –≤–µ—Ä—Ö–Ω—ñ–π —Ä–∏–≥—ñ—Å—Ç—Ä
# name.upper() - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤—Å–µ —É –≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
# name.lower() - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤—Å–µ —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
# r —Ä—è–¥–æ–∫ –≤–∏–∫–æ–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ —É—Å—ñ–º–∞ —Å–∏–º–≤–æ–ª–∞–º–∏ r'Hello/\nWorld/\n'

sente = r'Hello World!\nMy name {name} and my surname \'{surname}\n\t\t{age}\t\t'
print(sente)
print('Hello World!\nMy name {name} and my surname \'{surname}\n\t\t{age}\t\t')
'''

#sql_query = rf'''
 #   select id, name from db 
  #  where name = {name};
#'''


'''
# Task1. –ü—Ä–∏–π–Ω—è—Ç–∏ –≤—ñ–¥ –∫–æ—Ä—É—Å—Ç—É–≤–∞—á–∞: –º–∞—Ä–∫—É, —Ä—ñ–∫, —Ç–∏–ø –¥–≤–∏–≥—É–Ω–∞. –í–∏–≤–µ–∑—Ç–∏ –≤—Å—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é use 3 - types of format - –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ 
mark_auto = input('Enter mark auto: ').rstrip()
year_auto = input(f'Enter year auto: {mark_auto}: ').rstrip() # [0:4]
type_of_engine = input('Enter type/size of engine: ').rstrip()

# First, simple concat 
print('Mark: ', mark_auto, '\nYear: ', year_auto, '\nType of engine: ', type_of_engine, end = '\n\n')

# Second var, with format 
print('Mark: {mark}\nYear: {year}\mType of engine: {type}'.format(mark = mark_auto, year = year_auto, type = type_of_engine), end = '\n\n')


# Thierd var, using f-strings
print(f'Mark: {mark_auto} \nYear: {year_auto} \nType of engine: {type_of_engine}')
'''

'''
my_first_list = []
print(my_first_list, type(my_first_list))

my_first_list.append(1)
my_first_list.append(2)
my_first_list.append([3, 4])
print(my_first_list, my_first_list[0])

arr = ['name', 'surname', 18, True, [], 3.14] # create list by using []
arr_1 = list() # create emp list or use []
print(arr)

arr.append([9, 10])
print(arr)

arr.extend([11, 12,11])
print(arr)

matrix = [
    [1,2,[3,4,5]], # 0
    [4,5,6], # 1
    [7,8,9] # 2
]

print(matrix[0][-1][0]) # 0 - [1,2,[3,4,5]], -1 - [3,4,5], 0 - 3
print(matrix[0][0], matrix[1][1], matrix[2][2])

# if/stat - –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ –†–æ–∑–≥–ª–∞
# if <operation> and/or/not <operation>:
age = 17
if age >= 18 and age <= 100:
    print('You can go bar')
elif age < 18:
    print('You can\'t go bar')
else: 
    print('No info ')

age = 101
if age >= 18 and age <= 100: # first statement
    # indent block
    print('You can go bar')
elif age <= 18: # next stat if first False
    print(f'wait {18 - age}')
else: # if other block false, than up to else
    print('No info')

from random import choice

auto = ['Jaguar', 'Porsche', 'Tesla', 'Reno']

val = choice(auto)
print(val)

match val: # val 
    case 'Jaguar': # val == 'Jaguar'
        print('Jaguar best car')
    case 'Porsche': print('It is not Jaguar üòü')
    case 'Tesla':   print('Buy Jaguar')
    case _ : print('error') # else block
'''

'''
# 1. Take an integer number as input and print if it‚Äôs ‚ÄúEven‚Äù or ‚ÄúOdd‚Äù.
# input, print, cast, if
num = int(input('Please enter num: '))
#result = print('odd') if num % 2 else print('Even')

match num % 2:
    case 0:
        print('odd')
    case _ : print('Even')
'''

'''
# 2. Take as inputs sides of rectangular and print ‚ÄúBig‚Äù if the area is larger than 100, otherwise ‚Äúsmall‚Äù.
hei = int(input('enter hei: '))
wei = int(input('enter wei: '))
if (hei * wei) > 100:
    print('Big')
else:
    print('Small')

# Second var
result = 'Big' if (hei * wei) > 100 else 'Small'
print(result)

result = 'Big' if (hei * wei) < 500 else 'Very Big' if (hei * wei) > 100 else 'Small'
'''

'''
a = 5
b = 5
operator = '//'
eval(f'{a} {operator} {b}')
'''

'''
# 3. –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–≥—É—Ä–∏ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —ñÃà—ñÃà –ø–ª–æ—â—É. 
# –í–∏–≤–µ–¥—ñ—Ç—å –Ω–∞–ø–∏—Å ¬´–í–µ–ª–∏–∫–∏–∏ÃÜ¬ª, —è–∫—â–æ –ø–ª–æ—â–∞ –±—ñ–ª—å—à–µ 100, ¬´–ú–∞–ª–µ–Ω—å–∫–∏–∏ÃÜ¬ª, —è–∫—â–æ –º–µ–Ω—à–µ. –Ü —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥'—î–º–Ω–∞ ‚Äì ¬´–ü–æ–º–∏–ª–∫–∞¬ª
# –†–æ–º–±, —Ç—Ä–∏–∫, –∫–≤–∞–¥—Ä–∞—Ç—É, –∫–æ–ª–æ, –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫
# 3 - –∑—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏  —ñ—Å–Ω—É—î  —Ñ—ñ–≥—É—Ä–∞, match/case
list_of_figure = ['–†–æ–º–±','–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫']
name_of_figure = input('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–≥—É—Ä—É: –†–æ–º–± –∏–ª–∏ –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫: ').capitalize()

while not (name_of_figure in list_of_figure):
    print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ç—É —Ñ–∏–≥—É—Ä—É –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ')
    name_of_figure = input('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–≥—É—Ä—É: –†–æ–º–± –∏–ª–∏ –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫: ').capitalize()

if name_of_figure in list_of_figure:
    print(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ñ–∏–≥—É—Ä—É {name_of_figure}')

if name_of_figure == '–†–æ–º–±':
    d1 = float(input('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å: '))
    while d1 == 0:
        d1 = float(input('–ù–∏ –æ–¥–Ω–∞ –∏–∑ –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω–∞ –Ω—É–ª—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å –µ—â–µ —Ä–∞–∑: '))

    d2 = float(input('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å: '))
    while d2 == 0:
        d2 = float(input('–ù–∏ –æ–¥–Ω–∞ –∏–∑ –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω–∞ –Ω—É–ª—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å –µ—â–µ —Ä–∞–∑: '))

    area_of_a_rhombus = d1 * d2
    print(f'–ü–ª–æ—â–∞–¥—å –≤–∞—à–µ–≥–æ –†–æ–º–±–∞ —Ä–∞–≤–Ω–∞: {area_of_a_rhombus} —Å–º¬≤')

elif name_of_figure == '–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫':
    a = float(input('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞: '))
    while a == 0:
        a = float(input('–ù–∏ –æ–¥–Ω–∞ –∏–∑ —Å—Ç–æ—Ä–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω–∞ –Ω—É–ª—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É –µ—â–µ —Ä–∞–∑: '))

    b = float(input('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞: '))
    while b == 0:
        b = float(input('–ù–∏ –æ–¥–Ω–∞ –∏–∑ —Å—Ç–æ—Ä–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω–∞ –Ω—É–ª—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é —Å—Ç–æ—Ä–æ–Ω—É –µ—â–µ —Ä–∞–∑: '))

    c = float(input('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å—é —Å—Ç–æ—Ä–æ–Ω—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞: '))
    while c == 0:
        c = float(input('–ù–∏ –æ–¥–Ω–∞ –∏–∑ —Å—Ç–æ—Ä–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω–∞ –Ω—É–ª—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å—é —Å—Ç–æ—Ä–æ–Ω—É –µ—â–µ —Ä–∞–∑: '))

    area_of_a_triangle = (a + b + c) / 2
    print(f'–ü–ª–æ—â–∞–¥—å –≤–∞—à–µ–≥–æ –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Ä–∞–≤–Ω–∞: {area_of_a_triangle} —Å–º¬≤')
'''